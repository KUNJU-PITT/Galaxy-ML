<tool id="keras_dl_model" name="Keras Model Builder" version="@VERSION@">
  <description>constructs a deep learning model</description>
  <macros>
    <import>main_macros.xml</import>
  </macros>
  <requirements>
    <requirement type="package" version="1.13.1">tensorflow</requirement>
    <requirement type="package" version="2.2.4">Keras</requirement>
  </requirements>
  <expand macro="macro_stdio"/>
  <version_command>echo "@VERSION@"</version_command>
  <command>
    <![CDATA[
    cp '$inputs' '$outfile'
    ]]>
  </command>
  <configfiles>
    <inputs name="inputs"/>
  </configfiles>
  <inputs>
    <param name="learning_type" type="select" label="Do classification or regression?">
      <option value="keras_classifier">KerasClassifier</option>
      <option value="keras_regressor">KerasRegressor</option>
    </param>
    <conditional name="model_selection">
      <param name="model_type" type="select" label="Select keras model type">
        <option value="Sequential" selected="true">Sequential</option>
        <option value="Model">Model (functional API)</option>
      </param>
      <when value="Sequential">
        <repeat name="layers" min="1" max="500" title="LAYER">
          <conditional name="layer_selection">
            <param name="layer_type" type="select" label="Choose the type of layer">
              <option value="Dense">Dense</option>
              <option value="Activation">Activation</option>
              <option value="Dropout">Dropout</option>
              <option value="Flatten">Flatten</option>
              <option value="Input">Input</option>
              <option value="Reshape">Reshape</option>
              <option value="Permute">Permute</option>
              <option value="RepeatVector">RepeatVector</option>
              <option value="Lambda">Lambda</option>
              <option value="ActivityRegularization">ActivityRegularization</option>
              <option value="Masking">Masking</option>
              <option value="SpatialDropout1D">SpatialDropout1D</option>
              <option value="SpatialDropout2D">SpatialDropout2D</option>
              <option value="SpatialDropout3D">SpatialDropout3D</option>
              <option value="Conv1D">Conv1D</option>
              <option value="Conv2D">Conv2D</option>
              <option value="SeparableConv1D">SeparableConv1D</option>
              <option value="SeparableConv2D">SeparableConv2D</option>
              <option value="DepthwiseConv2D">DepthwiseConv2D</option>
              <option value="Conv2DTranspose">Conv2DTranspose</option>
              <option value="Conv3D">Conv3D</option>
              <option value="Conv3DTranspose">Conv3DTranspose</option>
              <option value="Cropping1D">Cropping1D</option>
              <option value="Cropping2D">Cropping2D</option>
              <option value="Cropping3D">Cropping3D</option>
              <option value="UpSampling1D">UpSampling1D</option>
              <option value="UpSampling2D">UpSampling2D</option>
              <option value="UpSampling3D">UpSampling3D</option>
              <option value="ZeroPadding1D">ZeroPadding1D</option>
              <option value="ZeroPadding2D">ZeroPadding2D</option>
              <option value="ZeroPadding3D">ZeroPadding3D</option>
              <option value="MaxPooling1D">MaxPooling1D</option>
              <option value="MaxPooling2D">MaxPooling2D</option>
              <option value="MaxPooling3D">MaxPooling3D</option>
              <option value="AveragePooling1D">AveragePooling1D</option>
              <option value="AveragePooling2D">AveragePooling2D</option>
              <option value="AveragePooling3D">AveragePooling3D</option>
              <option value="GlobalMaxPooling1D">GlobalMaxPooling1D</option>
              <option value="GlobalAveragePooling1D">GlobalAveragePooling1D</option>
              <option value="GlobalMaxPooling2D">GlobalMaxPooling2D</option>
              <option value="GlobalAveragePooling2D">GlobalAveragePooling2D</option>
              <option value="GlobalMaxPooling3D">GlobalMaxPooling3D</option>
              <option value="GlobalAveragePooling3D">GlobalAveragePooling3D</option>
              <option value="LocallyConnected1D">LocallyConnected1D</option>
              <option value="LocallyConnected2D">LocallyConnected2D</option>
              <option value="RNN">RNN</option>
              <option value="Masking">Masking</option>
              <option value="SimpleRNN">SimpleRNN</option>
              <option value="GRU">GRU</option>
              <option value="LSTM">LSTM</option>
              <option value="ConvLSTM2D">ConvLSTM2D</option>
              <option value="ConvLSTM2DCell">ConvLSTM2DCell</option>
              <option value="SimpleRNNCell">SimpleRNNCell</option>
              <option value="GRUCell">GRUCell</option>
              <option value="LSTMCell">LSTMCell</option>
              <option value="CuDNNGRU">CuDNNGRU</option>
              <option value="CuDNNLSTM">Dense</option>
              <option value="Embedding">Embedding</option>
              <option value="LeakyReLU">LeakyReLU</option>
              <option value="PReLU">PReLU</option>
              <option value="ELU">ELU</option>
              <option value="ThresholdedReLU">ThresholdedReLU</option>
              <option value="Softmax">Softmax</option>
              <option value="ReLU">ReLU</option>
              <option value="BatchNormalization">BatchNormalization</option>
              <option value="GaussianNoise">GaussianNoise</option>
              <option value="GaussianDropout">GaussianDropout</option>
              <option value="AlphaDropout">AlphaDropout</option>
            </param>
            <when value="Dense">
              <param argument="units" type="integer" value="" optional="false" label="units" help="Positive integer, dimensionality of the output space."/>
              <section name="dense_options" title="Layer Advanced Options" expanded="false">
                <param argument="input_shape" type="text" value="" optional="true" label="input_shape" help="None or tuple of integers. Only required for the first layer."/>
                <expand macro="keras_activations"/>
                <param argument="use_bias" type="boolean" truevalue="booltrue" falsevalue="boolfalse" optional="true" checked="true" />
                <expand macro="keras_initializers" default_kernel="true"/>
                <expand macro="keras_initializers" argument="bias_initializer" label="bias_initializer" default_bias="true"/>
                <expand macro="keras_regularizers"/>
                <expand macro="keras_constraints"/>
                <expand macro="keras_constraints" argument="bias_constraint" label="bias_constraint"/>
              </section>
            </when>
            <when value="Activation">
            </when>
            <when value="Dropout">
            </when>
            <when value="Flatten">
            </when>
            <when value="Input">
            </when>
            <when value="Reshape">
            </when>
            <when value="Permute">
            </when>
            <when value="RepeatVector">
            </when>
            <when value="Lambda">
            </when>
            <when value="ActivityRegularization">
            </when>
            <when value="Masking">
            </when>
            <when value="SpatialDropout1D">
            </when>
            <when value="SpatialDropout2D">
            </when>
            <when value="SpatialDropout3D">
            </when>
            <when value="Conv1D">
            </when>
            <when value="Conv2D">
            </when>
            <when value="SeparableConv1D">
            </when>
            <when value="SeparableConv2D">
            </when>
            <when value="DepthwiseConv2D">
            </when>
            <when value="Conv2DTranspose">
            </when>
            <when value="Conv3D">
            </when>
            <when value="Conv3DTranspose">
            </when>
            <when value="Cropping1D">
            </when>
            <when value="Cropping2D">
            </when>
            <when value="Cropping3D">
            </when>
            <when value="UpSampling1D">
            </when>
            <when value="UpSampling2D">
            </when>
            <when value="UpSampling3D">
            </when>
            <when value="ZeroPadding1D">
            </when>
            <when value="ZeroPadding2D">
            </when>
            <when value="ZeroPadding3D">
            </when>
            <when value="MaxPooling1D">
            </when>
            <when value="MaxPooling2D">
            </when>
            <when value="MaxPooling3D">
            </when>
            <when value="AveragePooling1D">
            </when>
            <when value="AveragePooling2D">
            </when>
            <when value="AveragePooling3D">
            </when>
            <when value="GlobalMaxPooling1D">
            </when>
            <when value="GlobalAveragePooling1D">
            </when>
            <when value="GlobalMaxPooling2D">
            </when>
            <when value="GlobalAveragePooling2D">
            </when>
            <when value="GlobalMaxPooling3D">
            </when>
            <when value="GlobalAveragePooling3D">
            </when>
            <when value="LocallyConnected1D">
            </when>
            <when value="LocallyConnected2D">
            </when>
            <when value="RNN">
            </when>
            <when value="Masking">
            </when>
            <when value="SimpleRNN">
            </when>
            <when value="GRU">
            </when>
            <when value="LSTM">
            </when>
            <when value="ConvLSTM2D">
            </when>
            <when value="ConvLSTM2DCell">
            </when>
            <when value="SimpleRNNCell">
            </when>
            <when value="GRUCell">
            </when>
            <when value="LSTMCell">
            </when>
            <when value="CuDNNGRU">
            </when>
            <when value="CuDNNLSTM">
            </when>
            <when value="Embedding">
            </when>
            <when value="LeakyReLU">
            </when>
            <when value="PReLU">
            </when>
            <when value="ELU">
            </when>
            <when value="ThresholdedReLU">
            </when>
            <when value="Softmax">
            </when>
            <when value="ReLU">
            </when>
            <when value="BatchNormalization">
            </when>
            <when value="GaussianNoise">
            </when>
            <when value="GaussianDropout">
            </when>
            <when value="AlphaDropout">
            </when>
          </conditional>
        </repeat>
      </when>
      <when value="Model">
      </when>
    </conditional>
    <param name="loss" type="select" label="Select a loss function">
      <option value="mean_squared_error">mse / MSE/ mean_squared_error</option>
      <option value="mean_absolute_error">mae / MAE / mean_absolute_error</option>
      <option value="mean_absolute_percentage_error">mape / MAPE / mean_absolute_percentage_error</option>
      <option value="mean_squared_logarithmic_error">msle / MSLE / mean_squared_logarithmic_error</option>
      <option value="squared_hinge">squared_hinge</option>
      <option value="hinge">hinge</option>
      <option value="categorical_hinge">categorical_hinge</option>
      <option value="logcosh">logcosh</option>
      <option value="categorical_crossentropy" selected="true">categorical_crossentropy</option>
      <option value="sparse_categorical_crossentropy">sparse_categorical_crossentropy</option>
      <option value="binary_crossentropy">binary_crossentropy</option>
      <option value="kullback_leibler_divergence">kld / KLD / kullback_leibler_divergence</option>
      <option value="poisson">poisson</option>
      <option value="cosine_proximity">cosine / cosine_proximity</option>
    </param>
    <conditional name="optimizer_selection">
      <param name="optimizer_type" type="select" label="Select an optimizer">
        <option value="SGD" selected="true">SGD - Stochastic gradient descent optimizer </option>
        <option value="RMSprop">RMSprop - RMSProp optimizer </option>
        <option value="Adagrad">Adagrad - Adagrad optimizer </option>
        <option value="Adadelta">Adadelta - Adadelta optimizer </option>
        <option value="Adam">Adam - Adam optimizer </option>
        <option value="Adamax">Adamax - A variant of Adam based on the infinity norm </option>
        <option value="Nadam">Nadam - Nesterov Adam optimizer </option>
      </param>
      <when value="SGD">
        <expand macro="keras_optimizer_common">
          <param argument="momentum" type="float" value="0" optional="true" label="Momentum" 
              help="float >= 0. Parameter that accelerates SGD in the relevant direction and dampens oscillations."/>
          <param argument="decay" type="float" value="0" label="Decay" optional="true" help="float &gt;= 0. Learning rate decay over each update."/>
          <param argument="nesterov" type="boolean" truevalue="booltrue" falsevalue="boolfalse" optional="true" checked="false" label="Whether to apply Nesterov momentum"/>
        </expand>
      </when>
      <when value="RMSprop">
        <expand macro="keras_optimizer_common_more" lr="0.001">
          <param argument="rho" type="float" value="0.9" optional="true" label="rho" help="float &gt;= 0."/>
        </expand>
      </when>
      <when value="Adagrad">
        <expand macro="keras_optimizer_common_more" lr="0.001"/>
      </when>
      <when value="Adadelta">
        <expand macro="keras_optimizer_common_more" lr="1.0">
          <param argument="rho" type="float" value="0.95" optional="true" label="rho" help="float &gt;= 0."/>
        </expand>
      </when>
      <when value="Adam">
        <expand macro="keras_optimizer_common_more" lr="0.001">
          <param argument="beta_1" type="float" value="0.9" optional="true" label="beta_1" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
          <param argument="beta_2" type="float" value="0.999" optional="true" label="beta_2" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
          <param argument="amsgrad" type="boolean" truevalue="booltrue" falsevalue="boolfalse" optional="true" checked="false" label="Whether to apply the AMSGrad variant?" 
              help="Refer to paper `On the Convergence of Adam and Beyond`"/>
        </expand>
      </when>
      <when value="Adamax">
        <expand macro="keras_optimizer_common_more" lr="0.002">
          <param argument="beta_1" type="float" value="0.9" optional="true" label="beta_1" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
          <param argument="beta_2" type="float" value="0.999" optional="true" label="beta_2" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
        </expand>
      </when>
      <when value="Nadam">
        <expand macro="keras_optimizer_common" lr="0.002">
          <param argument="beta_1" type="float" value="0.9" optional="true" label="beta_1" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
          <param argument="beta_2" type="float" value="0.999" optional="true" label="beta_2" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
          <param argument="epsilon" type="float" value="" label="epsilon" optional="true" help="Fuzz factor. If `None`, defaults to `K.epsilon()`"/>
          <param argument="schedule_decay" type="float" value="0.004" optional="true" label="schedule_decay" help="float, 0 &lt; beta &lt; 1."/>
        </expand>
      </when>
    </conditional>
    <!--param name="metrics" type="select" label="Select metrics"-->
    <param name="epochs" format="integer" value="100" label="epochs"/>
    <param name="batch_size" format="integer" value="10" label="batch_size"/>
	</inputs>
  <outputs>
    <data format="zip" name="outfile" label="Keras Model Builder"/>
  </outputs>
  <tests>
    <test>
      <param name="layer_type" value="Dense"/>
      <output name="outfile" file="best_score_.tabular"/>
    </test>
  </tests>
  <help>
      <![CDATA[
**Help**
      ]]>
  </help>
  <expand macro="sklearn_citation">
  </expand>
</tool>
