<tool id="keras_model_builder" name="Keras Model Builder" version="@VERSION@">
  <description>constructs a deep learning model with sciki-learn APIs</description>
  <macros>
		<import>main_macros.xml</import>
    <import>keras_macros.xml</import>
  </macros>
	<expand macro="python_requirements"/>
  <expand macro="macro_stdio"/>
  <version_command>echo "@VERSION@"</version_command>
  <command>
    <![CDATA[
    python '$__tool_directory__/keras_deep_learning.py'
					 '$inputs'
					 'keras_model_builder'
					 '$outfile'
					 '$config'

    ]]>
  </command>
  <configfiles>
    <inputs name="inputs"/>
  </configfiles>
  <inputs>
		<param name="config" type="data" format="json" label="Select the dataset containing Keras model configurations"/>
    <param name="learning_type" type="select" label="Do classification or regression?">
      <option value="keras_classifier">KerasClassifier</option>
      <option value="keras_regressor">KerasRegressor</option>
    </param>
    <section name="compile_params" title="Compile Parameters" expanded="true">
      <param name="loss" type="select" label="Select a loss function">
        <option value="mean_squared_error">mse / MSE/ mean_squared_error</option>
        <option value="mean_absolute_error">mae / MAE / mean_absolute_error</option>
        <option value="mean_absolute_percentage_error">mape / MAPE / mean_absolute_percentage_error</option>
        <option value="mean_squared_logarithmic_error">msle / MSLE / mean_squared_logarithmic_error</option>
        <option value="squared_hinge">squared_hinge</option>
        <option value="hinge">hinge</option>
        <option value="categorical_hinge">categorical_hinge</option>
        <option value="logcosh">logcosh</option>
        <option value="categorical_crossentropy" selected="true">categorical_crossentropy</option>
        <option value="sparse_categorical_crossentropy">sparse_categorical_crossentropy</option>
        <option value="binary_crossentropy">binary_crossentropy</option>
        <option value="kullback_leibler_divergence">kld / KLD / kullback_leibler_divergence</option>
        <option value="poisson">poisson</option>
        <option value="cosine_proximity">cosine / cosine_proximity</option>
      </param>
      <conditional name="optimizer_selection">
        <param name="optimizer_type" type="select" label="Select an optimizer">
          <option value="SGD" selected="true">SGD - Stochastic gradient descent optimizer </option>
          <option value="RMSprop">RMSprop - RMSProp optimizer </option>
          <option value="Adagrad">Adagrad - Adagrad optimizer </option>
          <option value="Adadelta">Adadelta - Adadelta optimizer </option>
          <option value="Adam">Adam - Adam optimizer </option>
          <option value="Adamax">Adamax - A variant of Adam based on the infinity norm </option>
          <option value="Nadam">Nadam - Nesterov Adam optimizer </option>
        </param>
        <when value="SGD">
          <expand macro="keras_optimizer_common">
            <param argument="momentum" type="float" value="0" optional="true" label="Momentum"
                help="float >= 0. Parameter that accelerates SGD in the relevant direction and dampens oscillations."/>
            <param argument="decay" type="float" value="0" label="Decay" optional="true" help="float &gt;= 0. Learning rate decay over each update."/>
            <param argument="nesterov" type="boolean" truevalue="booltrue" falsevalue="boolfalse" optional="true" checked="false" label="Whether to apply Nesterov momentum"/>
          </expand>
        </when>
        <when value="RMSprop">
          <expand macro="keras_optimizer_common_more" lr="0.001">
            <param argument="rho" type="float" value="0.9" optional="true" label="rho" help="float &gt;= 0."/>
          </expand>
        </when>
        <when value="Adagrad">
          <expand macro="keras_optimizer_common_more" lr="0.001"/>
        </when>
        <when value="Adadelta">
          <expand macro="keras_optimizer_common_more" lr="1.0">
            <param argument="rho" type="float" value="0.95" optional="true" label="rho" help="float &gt;= 0."/>
          </expand>
        </when>
        <when value="Adam">
          <expand macro="keras_optimizer_common_more" lr="0.001">
            <param argument="beta_1" type="float" value="0.9" optional="true" label="beta_1" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
            <param argument="beta_2" type="float" value="0.999" optional="true" label="beta_2" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
            <param argument="amsgrad" type="boolean" truevalue="booltrue" falsevalue="boolfalse" optional="true" checked="false" label="Whether to apply the AMSGrad variant?" 
                help="Refer to paper `On the Convergence of Adam and Beyond`"/>
          </expand>
        </when>
        <when value="Adamax">
          <expand macro="keras_optimizer_common_more" lr="0.002">
            <param argument="beta_1" type="float" value="0.9" optional="true" label="beta_1" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
            <param argument="beta_2" type="float" value="0.999" optional="true" label="beta_2" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
          </expand>
        </when>
        <when value="Nadam">
          <expand macro="keras_optimizer_common" lr="0.002">
            <param argument="beta_1" type="float" value="0.9" optional="true" label="beta_1" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
            <param argument="beta_2" type="float" value="0.999" optional="true" label="beta_2" help="float, 0 &lt; beta &lt; 1. Generally close to 1."/>
            <param argument="epsilon" type="float" value="" label="epsilon" optional="true" help="Fuzz factor. If `None`, defaults to `K.epsilon()`"/>
            <param argument="schedule_decay" type="float" value="0.004" optional="true" label="schedule_decay" help="float, 0 &lt; beta &lt; 1."/>
          </expand>
        </when>
      </conditional>
      <!--param name="metrics" type="select" label="Select metrics"-->
    </section>
    <section name="fit_params" title="Fit Parameters" expanded="true">
      <param name="epochs" type="integer" value="1" min="1" label="epochs"/>
      <param name="batch_size" type="integer" value="" optional="true" label="batch_size" help="Integer or blank for None"/>
    </section>
		<param name="random_seed" type="integer" value="0" label="Random Seed" help="Integer or blank for None"/>
	</inputs>
  <outputs>
    <data format="zip" name="outfile" label="Keras Model Builder  on ${on_string}"/>
  </outputs>
  <tests>
    <test>
      <param name="layer_type" value="Dense"/>
      <output name="outfile" file="best_score_.tabular"/>
    </test>
  </tests>
  <help>
      <![CDATA[
**Help**
      ]]>
  </help>
  <citations>
  </citations>
</tool>
