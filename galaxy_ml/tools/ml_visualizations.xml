<tool id="ml_visualizations" name="Machine Learning Visualizations" version="@VERSION@">
    <description>include various types of plotting for machine learning</description>
    <macros>
        <import>main_macros.xml</import>
        <import>keras_macros.xml</import>
    </macros>
    <expand macro="python_requirements">
        <requirement type="package" version="3.1.1">plotly</requirement>
    </expand>
    <expand macro="macro_stdio"/>
    <version_command>echo "@VERSION@"</version_command>
    <command>
        <![CDATA[
        python '$__tool_directory__/ml_visualizations.py' 
            --inputs '$inputs'
            #if $plotting_selection.plot_type == 'feature_importances'
            --estimator '$plotting_selection.infile_estimator'
            --infile1 '$plotting_selection.infile1'
            #end if
        ]]>
    </command>
    <configfiles>
        <inputs name="inputs" />
    </configfiles>
    <inputs>
        <conditional name="plotting_selection">
            <param name="plot_type" type="select" label="Select a plotting type">
                <option value="learning_curve" selected="true">Learning curve</option>
                <option value="pr_curve">Precison Recall curve</option>
                <option value="roc_curve">Receiver Operating Characteristic (ROC) curve</option>
                <option value="rfecv_gridscores">Recursive Feature Elimination gridscores with corss-validation</option>
                <option value="feature_importances">Feature Importances plot</option>
            </param>
            <when value="learning_curve">
            </when>
            <when value="pr_curve">
            </when>
            <when value="roc_curve">
            </when>
            <when value="rfecv_gridscores">
            </when>
            <when value="feature_importances">
                <param name="infile_estimator" type="data" format="zip" label="Select the dataset containing fitted estimator/pipeline" />
                <param name="infile1" type="data" format="tabular" label="Select the dataset containing feature names" help="Make sure the headers (first row) are feature names."/>
                <conditional name="column_selector_options">
                    <expand macro="samples_column_selector_options" multiple="true"/>
                </conditional>
                <param name="threshold" type="float" value="" optional="true" min="0." label="Threshold value" help="Features with importance below the threshold value will be ignored."/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="output" format="html" from_work_dir="output.html" label="${plotting_selection.plot_type} plot on ${on_string}"/>
    </outputs>
    <tests>
        <test>
            <param name="plot_type" value="feature_importances"/>
            <param name="infile_estimator" value="best_estimator_.zip" ftype="zip"/>
            <param name="infile1" value="regression_X.tabular" ftype="tabular"/>
            <param name="selected_column_selector_option" value="all_columns"/>
            <output name="output" file="ml_vis01.html" compare="sim_size"/>
        </test>
    </tests>
    <help>
        <![CDATA[
**What it does**
Output attribute from an estimator or any scikit object.

Common attributes are :

  - ``estimator.`` *feature_importances_*
  - ``RFE``. *ranking_*
  - ``RFECV``. *grid_scores_*
  - ``GridSearchCV``. *best_estimator_*

        ]]>
    </help>
    <expand macro="sklearn_citation">
        <expand macro="skrebate_citation"/>
        <expand macro="xgboost_citation"/>
        <expand macro="imblearn_citation"/>
    </expand>
</tool>
